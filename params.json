{"name":"ng-validator","tagline":"Angular validation helper class","body":"# ng-validator\r\nAngular validation helper class\r\n\r\n# How to install\r\n```sh \r\nbower install ng-validator --save\r\n```\r\n\r\n# How to use\r\n\r\nInclude it as dependency \r\n```javascript\r\nangular.module('myApp', ['ngValidator']);\r\n```\r\n\r\nInject in Controller / Service / Whatever \r\n```javascript\r\nAppController.$inject = ['Validator'];\r\n\r\nfunction AppController (Validator) {\r\n  var self = this;\r\n  \r\n  self.input = {\r\n    title: '',\r\n    description: '',\r\n    agree: null,\r\n    reason: ''\r\n  };\r\n  \r\n  self.errors = {};\r\n  \r\n  self.submit = submit;\r\n  \r\n  var rules = {\r\n    title: 'required',\r\n    description: 'required_with:title',\r\n    agree: 'required',\r\n    reason: 'required_with:title|required_if:agree,0'\r\n  }\r\n  \r\n  var customMessages = {\r\n    'description.required_with': 'Field needs to be filled if title present',\r\n    'reason.required_with': 'Please provide reason',\r\n    'reason.required_if': 'Please provide reason',\r\n  }\r\n\r\n  function submit() {\r\n    self.errors = {};\r\n    \r\n    var validator = new Validator(self.input, rules, customMessages);\r\n    \r\n    if (validator.fails()) {\r\n      for (var field in validator.errors.all()) {\r\n          self.errors[field] = validator.errors.first(field);\r\n      };  \r\n    }\r\n  }\r\n}\r\n``` \r\n\r\nShow errors in template\r\n```html\r\n<div ng-controller=\"AppController as app\">\r\n  <form ng-submit=\"app.submit()\">\r\n    <div class=\"form-group\" ng-class=\"{'has-error': app.errors.title}\">\r\n      <label class=\"form-label\">Title</label>\r\n      <input class=\"form-control\" ng-model=\"app.input.title\" />\r\n      <span class=\"help-block\" ng-if=\"app.errors.title\" ng-bind=\"app.errors.title\">\r\n    </div>\r\n    <button class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n```\r\n\r\nOr wrap it in simple directive\r\n```javascript\r\nangular\r\n  .module('myApp')\r\n  .directive('inputValidation', inputValidation);\r\n  \r\nfunction inputValidation() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      field: '@',\r\n      parent: '='\r\n    },\r\n    template: '<div class=\"form-group\" ng-class=\"{\\'has-error\\': parent.errors[field]}\">' +\r\n              '  <label class=\"form-label\">{{ field | uppercase }}</label>' +\r\n              '  <input class=\"form-control\" ng-model=\"parent.input[field]\" ng-change=\"parent.errors[field] = null\" />' +\r\n              '  <span class=\"help-block\" ng-if=\"parent.errors[field]\" ng-bind=\"parent.errors[field]\">' +\r\n              '</div>',\r\n    link: function (scope, elem, attr) {}\r\n  }\r\n};\r\n```\r\n\r\nAnd use as\r\n```html\r\n<input-validation parent=\"app\" field=\"title\"></input-validation>\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}