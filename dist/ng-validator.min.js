/**
 * Angular validation helper class
 * @version v0.0.3
 * @link https://github.com/andrewdacenko/ng-validator
 * @license MIT
 */
!function(e,t,r){"use strict";t.module("ngValidator",["ngValidator.message-bag","ngValidator.validation-translator","ngValidator.validator"]),t.module("ngValidator.message-bag",[]).factory("MessageBag",function(){function e(){this.errors={}}return e.prototype.add=function(e,t){this.errors[e]instanceof Array||(this.errors[e]=[]),this.errors[e].push(t)},e.prototype.hasErrors=function(){for(var e in this.errors)if(this.errors.hasOwnProperty(e))return!0;return!1},e.prototype.all=function(){return this.errors},e.prototype.has=function(e){return this.errors[e]?!0:!1},e.prototype.first=function(e){return this.has(e)?this.errors[e][0]:""},e.prototype.get=function(e){return this.has(e)?this.errors[e]:[]},e}),t.module("ngValidator.validation-translator",[]).constant("validationTranslatorLang",{locale:"en",fallback:"en"}).constant("validationTranslatorConfig",{en:{accepted:"The :attribute must be accepted.",between:{numeric:"The :attribute must be between :min and :max.",string:"The :attribute must be between :min and :max characters.",array:"The :attribute must have between :min and :max items."},"in":"The selected :attribute is invalid.",integer:"The :attribute must be an integer.",max:{numeric:"The :attribute may not be greater than :max.",string:"The :attribute may not be greater than :max characters.",array:"The :attribute may not have more than :max items."},min:{numeric:"The :attribute must be at least :min.",string:"The :attribute must be at least :min characters.",array:"The :attribute must have at least :min items."},not_in:"The selected :attribute is invalid.",numeric:"The :attribute must be a number.",regex:"The :attribute format is invalid.",required:"The :attribute field is required.",required_if:"The :attribute field is required when :other is :value.",required_with:"The :attribute field is required when :values is present.",required_with_all:"The :attribute field is required when :values is present.",required_without:"The :attribute field is required when :values is not present.",required_without_all:"The :attribute field is required when none of :values are present.",custom:{"attribute-name":{"rule-name":"custom-message"}},attributes:{email:"Email address"},values:{colors:{F00:"Red","0F0":"Green","00F":"Blue"}}}}).service("ValidationTranslator",["validationTranslatorLang","validationTranslatorConfig",function(e,t){this.trans=function(e,t,r){return t=t||{},r=r||null,this.get(e,t,r)},this.get=function(e,t,r){for(var i=this.parseLocale(r),a=null,n=0;n<i.length;n++){var a=this.getMessage(i[n],e,t);if(a)break}return a?a:e},this.getMessage=function(e,r){var i,a=t[e];if(a){for(var n=a,u=r.split("."),o=0;o<u.length;o++){if(!n[u[o]])return;n=n[u[o]]}i=n}return i},this.parseLocale=function(t){return null!==t?[t,this.fallback].filter(function(e){return e}):[e.locale,e.fallback].filter(function(e){return e})}}]),t.module("ngValidator.validator",["ngValidator.message-bag","ngValidator.validation-translator"]).factory("Validator",["MessageBag","ValidationTranslator",function(e,t){function i(e,t,r,i){this.data=e,this.rules=this.explodeRules(t),this.customMessages=r||{},this.customAttributes=i||{}}function a(e){return(e+"").replace(/^([a-z\u00E0-\u00FC])|\s+([a-z\u00E0-\u00FC])/g,function(e){return e.toUpperCase()})}function n(e){return e=a((e+"").replace(/[-_]/g," ")),e.replace(/[\s]/g,"")}function u(e){return(e+"").replace(/(.)([A-Z])/g,"$1_$2").toLowerCase()}function o(e,t){return e.replace(/:([A-z]*)/g,function(e,r){var i=t[r];return"string"==typeof i||"number"==typeof i?i:e})}return i.make=function(e,t,r,a){return new i(e,t,r,a)},i.prototype.sizeRules=["Size","Between","Min","Max"],i.prototype.numericRules=["Numeric","Integer"],i.prototype.implicitRules=["Required","RequiredWith","RequiredWithAll","RequiredWithout","RequiredWithoutAll","RequiredIf","Accepted"],i.prototype.fallbackMessages={},i.prototype.customAttributes={},i.prototype.customValues={},i.prototype.explodeRules=function(e){for(var t in e)e[t]="string"==typeof e[t]?e[t].split("|"):e[t];return e},i.prototype.parseRule=function(e){return Array.isArray(e)?this.parseArrayRule(e):this.parseStringRule(e)},i.prototype.parseArrayRule=function(e){return{rule:n(e[0].trim()),parameters:e.slice(1)}},i.prototype.parseStringRule=function(e){var t=[];if(-1!==e.indexOf(":")){var r=e.split(":");e=r[0];var t=this.parseParameters(e,r[1])}return{rule:n(e.trim()),parameters:t}},i.prototype.parseParameters=function(e,t){return"regex"==e.toLowerCase()?[t]:t.split(",")},i.prototype.validate=function(e,t){var r=this.parseRule(t);if(""!==r.rule){var i=this.getValue(e);this["validate"+r.rule](e,i,r.parameters)||this.addFailure(e,r.rule,r.parameters)}},i.prototype.passes=function(){this.errors=new e;for(var t in this.rules)for(var r=this.rules[t],i=0;i<r.length;i++)this.validate(t,r[i]);return!this.errors.hasErrors()},i.prototype.fails=function(){return!this.passes()},i.extend=function(e,t,r){e=n(e),i.prototype["validate"+e]=t,i.prototype.defaultMessages[e]=r||""},i.prototype.addFailure=function(e,t,r){var i=this.getMessage(e,t);i=this.doReplacements(i,e,t,r),this.errors.add(e,i)},i.prototype.getMessage=function(e,r){var i=u(r),a=this.getInlineMessage(e,i);if(a)return a;var n=["custom.",e,".",i].join(""),o=t.trans(n);if(o!==n)return o;if(-1!==this.sizeRules.indexOf(r))return this.getSizeMessage(e,r);var s=i,l=t.trans(s);return s!==l?l:this.getInlineMessage(e,i,this.fallbackMessages)||s},i.prototype.getInlineMessage=function(e,t,i){var a=i||this.customMessages,u=[e+"."+t,n(t)];for(var o in u)if(a[u[o]]!==r)return a[u[o]]},i.prototype.getSizeMessage=function(e,r){var i=u(r),a=this.getAttributeType(e),n=[i,".",a].join("");return t.trans(n)},i.prototype.doReplacements=function(e,t,i,a){var e=o(e,{attribute:t});return this["replace"+i]!==r&&(e=this["replace"+i](e,t,i,a)),e},i.prototype.getValue=function(e){return this.data[e]},i.prototype.anyFailingRequired=function(e){for(var t in e)if(!this.validateRequired(t,this.getValue(t)))return!0;return!1},i.prototype.allRequiredFails=function(e){for(var t in e)if(this.validateRequired(t,this.getValue(t)))return!1;return!0},i.prototype.validateRequired=function(e,t){if(null===t||t===r)return!1;if("string"==typeof t){if(""===t.trim())return!1}else if(t instanceof Array){if(t.length<1)return!1}else if(t instanceof Object&&!(t instanceof Date)&&0===Object.getOwnPropertyNames(t).length)return!1;return!0},i.prototype.validateRequiredWith=function(e,t,r){return this.allRequiredFails(r)?!0:this.validateRequired(e,t)},i.prototype.validateRequiredWithAll=function(e,t,r){return this.anyFailingRequired(r)?!0:this.validateRequired(e,t)},i.prototype.validateRequiredWithout=function(e,t,r){return this.anyFailingRequired(r)?this.validateRequired(e,t):!0},i.prototype.validateRequiredWithoutAll=function(e,t,r){return this.allFailingRequired(r)?this.validateRequired(e,t):!0},i.prototype.validateRequiredIf=function(e,t,r){return this.getValue(r[0])===r[1]?this.validateRequired(e,t):!0},i.prototype.validateAccepted=function(e,t){var r=["yes","on","1",1,!0,"true"];return this.validateRequired(e,t)&&-1!==r.indexOf(t)},i.prototype.validateIn=function(e,t,r){return r.indexOf(""+t)},i.prototype.validateNotIn=function(e,t,r){return!this.validateIn(e,t,r)},i.prototype.validateInteger=function(e,t){return filter_var(t,FILTER_VALIDATE_INT)!==!1},i.prototype.validateNumeric=function(e,t){return!isNaN(t)},i.prototype.validateBetween=function(e,t,r){this.requireParameterCount(2,r,"between");var i=this.getSize(e,t);return i>=r[0]&&i<=r[1]},i.prototype.requireParameterCount=function(e,t,r){if(t.length<e)throw new Error("Validation rule "+r+" requires at least "+e+" parameters.")},i.prototype.getSize=function(e,t){var r=this.hasRule(e,this.numericRules);return!isNaN(t)&&r?this.data[e]:Array.isArray(t)?t.length>0:this.getStringSize(t)},i.prototype.getStringSize=function(e){return e?(""+e).trim().length:0},i.prototype.hasRule=function(e,t){return!!this.getRule(e,t)},i.prototype.getRule=function(e,t){if(this.rules[e])for(var r in this.rules){var i=this.parseRule(this.rules[r]);if(-1!==t.indexOf(i.rule))return i}},i.prototype.getAttribute=function(e){if(this.customAttributes[e])return this.customAttributes[e];var r="attributes."+e,i=t.trans(r);return i!==r?i:u(e).replace(/_/g," ")},i.prototype.getAttributeType=function(e){return this.hasRule(e,this.numericRules)?"numeric":this.hasRule(e,"Array")?"array":"string"},i.prototype.getAttributeList=function(e){for(var t=[],r=0;r<e.length;r++)t.push(this.getAttribute(e[r]));return t},i.prototype.getDisplayableValue=function(e,r){if(this.customValues[e]&&this.customValues[e][r])return this.customValues[e][r];var i="values."+e+"."+r,a=t.trans(i);return a!==i?a:r},i.prototype.replaceBetween=function(e,t,r,i){return e.replace(":min",i[0]).replace(":max",i[1])},i.prototype.replaceSize=function(e,t,r,i){return e.replace(":size",i[0])},i.prototype.replaceMin=function(e,t,r,i){return e.replace(":min",i[0])},i.prototype.replaceMax=function(e,t,r,i){return e.replace(":max",i[0])},i.prototype.replaceIn=function(e,t,r,i){for(var a=0;a<i.length;a++)i[a]=this.getDisplayableValue(t,i[a]);return e.replace(":values",i.join(", "))},i.prototype.replaceNotIn=function(e,t,r,i){return this.replaceIn(e,t,r,i)},i.prototype.replaceRequiredWith=function(e,t,r,i){return i=this.getAttributeList(i),e.replace(":values",i.join(" / "))},i.prototype.replaceRequiredWithout=function(e,t,r,i){return this.replaceRequiredWith(e,t,r,i)},i.prototype.replaceRequiredWithoutAll=function(e,t,r,i){return this.replaceRequiredWith(e,t,r,i)},i.prototype.replaceRequiredIf=function(e,t,r,i){return i[1]=this.getDisplayableValue(i[0],array_get(this.data,i[0])),i[0]=this.getAttribute(i[0]),e.replace(":other",i[0]).replace(":value",i[1])},i.prototype.replaceSame=function(e,t,r,i){return e.replace(":other",this.getAttribute(i[0]))},i.prototype.replaceDifferent=function(e,t,r,i){return this.replaceSame(e,t,r,i)},i.prototype.replaceDateFormat=function(e,t,r,i){return e.replace(":format",i[0])},i.prototype.replaceBefore=function(e,t,r,i){return Date.parse(i[0])?e.replace(":date",i[0]):e.replace(":date",this.getAttribute(i[0]))},i.prototype.replaceAfter=function(e,t,r,i){return this.replaceBefore(e,t,r,i)},i}])}(window,angular);
//# sourceMappingURL=ng-validator.min.js.map